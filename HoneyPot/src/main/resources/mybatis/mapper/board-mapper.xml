<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="board">

	<!-- 게시글 목록 -->	
	<select id="getList" resultType="com.hp.app.board.vo.BoardVo">
		SELECT
		    B.NO AS NO
		    ,B.WRITER_NO AS WRITER_NO
		    ,M.NAME AS WRITER_NAME
		    ,S.NO AS BOARD_STATUS_NO
		    ,S.NAME AS BOARD_STATUS_NAME
		    ,B.BOARD_CNO AS BOARD_CNO
		    ,C.NAME AS BOARD_CNAME
		    ,TITLE
		    ,B.CONTENT AS CONTENT
		    ,B.ENROLL_DATE AS ENROLL_DATE
		    ,B.MODIFY_DATE AS MODIFY_DATE
		    ,HIT
		    ,COALESCE(A.LOVE_CNT, 0) AS LOVE_CNT
		    ,I.BOARD_IMG_NAME AS BOARD_IMG_NAME
		FROM
		    BOARD B
		    JOIN BOARD_CATEGORY C ON B.BOARD_CNO = C.NO
		    JOIN BOARD_STATUS S ON B.BOARD_STATUS_NO = S.NO
		    JOIN MEMBER M ON B.WRITER_NO = M.NO
		    LEFT JOIN
		    		(
	        			SELECT BOARD_NO, COUNT(MEMBER_NO) AS LOVE_CNT
	        			FROM LOVE
	        			GROUP BY BOARD_NO
	        		) A ON A.BOARD_NO = B.NO
            LEFT JOIN
		            (
		                SELECT B.NO AS TEMP_NO, I.NAME AS BOARD_IMG_NAME
		                FROM BOARD B JOIN BOARD_IMG I ON B.NO = I.BOARD_NO
		            ) I ON B.NO = TEMP_NO
		WHERE S.NO != 5
			AND C.NO = #{cno}

 		<if test="searchType == 'title' and searchValue != null and searchValue != ''">
			AND TITLE LIKE ('%${searchValue}%')
		</if>
		<if test="searchType == 'content' and searchValue != null and searchValue != ''">
			AND B.CONTENT LIKE ('%${searchValue}%')
		</if>
		<if test="searchType == 'writer' and searchValue != null and searchValue != ''">
			AND M.NAME LIKE ('%${searchValue}%')
		</if>
		
		<choose>
			<when test="sortType == 'date'">
				ORDER BY B.ENROLL_DATE DESC, B.NO DESC
			</when>
			<when test="sortType == 'hit'">
				ORDER BY HIT DESC, B.NO DESC
			</when>
			<when test="sortType == 'love'">
				ORDER BY LOVE_CNT DESC, B.NO DESC
			</when>
			<otherwise>
				ORDER BY B.NO DESC
			</otherwise>
		</choose>
	</select>	


	<!-- 게시글 개수 -->
	<select id="countBoard" resultType="int">
		SELECT COUNT(B.NO)
		FROM
		    BOARD B
		    JOIN BOARD_CATEGORY C ON B.BOARD_CNO = C.NO
		    JOIN BOARD_STATUS S ON B.BOARD_STATUS_NO = S.NO
		    JOIN MEMBER M ON B.WRITER_NO = M.NO
   		WHERE S.NO != 5
			AND C.NO = #{cno}
   		
   		<if test="searchType == 'title' and searchValue != null and searchValue != ''">
			AND TITLE LIKE ('%${searchValue}%')
		</if>
		<if test="searchType == 'content' and searchValue != null and searchValue != ''">
			AND B.CONTENT LIKE ('%${searchValue}%')
		</if>
		<if test="searchType == 'writer' and searchValue != null and searchValue != ''">
			AND M.NAME LIKE ('%${searchValue}%')
		</if>
		
	</select>
	
	
	<!-- 상세조회 -->
	<select id="viewDetail" resultType="com.hp.app.board.vo.BoardVo">		
		SELECT
		    B.NO AS NO
		    ,B.WRITER_NO AS WRITER_NO
		    ,M.NAME AS WRITER_NAME
		    ,S.NO AS BOARD_STATUS_NO
		    ,S.NAME AS BOARD_STATUS_NAME
		    ,B.BOARD_CNO AS BOARD_CNO
		    ,C.NAME AS BOARD_CNAME
		    ,TITLE
		    ,B.CONTENT AS CONTENT
		    ,B.ENROLL_DATE AS ENROLL_DATE
		    ,B.MODIFY_DATE AS MODIFY_DATE
		    ,HIT
		    ,COALESCE(A.LOVE_CNT, 0) AS LOVE_CNT
		FROM
		    BOARD B
		    JOIN BOARD_CATEGORY C ON B.BOARD_CNO = C.NO
		    JOIN BOARD_STATUS S ON B.BOARD_STATUS_NO = S.NO
		    JOIN MEMBER M ON B.WRITER_NO = M.NO
		    LEFT JOIN
		    		(
	        			SELECT BOARD_NO, COUNT(MEMBER_NO) AS LOVE_CNT
	        			FROM LOVE
	        			GROUP BY BOARD_NO
	        		) A ON A.BOARD_NO = B.NO
		WHERE S.NO != 5
		AND B.NO = #{no}
	</select>
	
	<!-- 조회수 증가 -->
	<update id="plusHit">
		UPDATE (
					SELECT B.NO AS NO, B.HIT AS HIT
					FROM BOARD B JOIN BOARD_STATUS S ON B.BOARD_STATUS_NO = S.NO
					WHERE S.NO != 5
				) 
		SET HIT = HIT +1
        WHERE NO = #{no}
	</update>
		
	
	<!-- 댓글 작성 -->
	<insert id="writeReply">
		INSERT INTO REPLY (
			NO
			,BOARD_NO
			,WRITER_NO
			,CONTENT
		)
		VALUES (
			SEQ_REPLY_NO.NEXTVAL
			,#{boardNo}
			,#{writerNo}
			,#{content}
		)
	</insert>
	
	<!-- 댓글 수정 -->
	<update id="editReply">
		UPDATE REPLY SET 
			CONTENT = #{content}
			, MODIFY_DATE = SYSDATE
		WHERE 
		    NO = #{no} 
		    AND BOARD_NO = #{boardNo}
		    AND WRITER_NO = #{writerNo}
	</update>
	
	<!-- 댓글 삭제 -->
	<update id="deleteReply">
	UPDATE REPLY SET 
		STATUS = 'N'
	WHERE 
	    NO = #{no} 
	    AND BOARD_NO = #{boardNo}
	    <!-- AND WRITER_NO = #{writerNo} -->
	</update>
	
	
	<!-- 댓글목록 -->
	<select id="getReplyList" resultType="com.hp.app.board.vo.ReplyVo">
		SELECT 
		    R.NO AS NO
		    ,BOARD_NO
		    ,WRITER_NO
		    ,M.NAME AS WRITER_NAME
		    ,REPLY_NO
		    ,CONTENT
		    ,R.ENROLL_DATE AS ENROLL_DATE
		    ,R.MODIFY_DATE AS MODIFY_DATE
		    ,R.STATUS AS STATUS
		    ,M.PROFILE AS PROFILE
		FROM REPLY R JOIN MEMBER M ON R.WRITER_NO = M.NO
		WHERE R.STATUS = 'Y'
		AND BOARD_NO = #{boardNo}
		ORDER BY NO
	</select>
	
	
	<!-- 좋아요 개수 -->
	<select id="countLove" resultType="int">
	    SELECT COUNT(*)
	    FROM LOVE
	    WHERE BOARD_NO = #{boardNo}
	</select>
	
	<!-- 좋아요 여부 -->
	<select id="checkLoveYn" resultType="int">
	    SELECT COUNT(*)
	    FROM LOVE
	    WHERE MEMBER_NO = #{memberNo} AND BOARD_NO = #{boardNo}
	</select>
	
	<!-- 좋아요 삽입 -->
	<insert id="insertLove">
		INSERT INTO LOVE (MEMBER_NO, BOARD_NO) VALUES (#{memberNo}, #{boardNo})
	</insert>
	
	<!-- 좋아요 삭제 -->
	<delete id="deleteLove">
		DELETE FROM LOVE WHERE MEMBER_NO = #{memberNo} AND BOARD_NO = #{boardNo}
	</delete>
	
	
	<!-- 카테고리 조회 -->
	<select id="getCategory" resultType="com.hp.app.board.vo.BoardCategoryVo">
		SELECT NO, NAME
		FROM BOARD_CATEGORY
	</select>
	
	<!-- 글 작성 -->
 	<insert id="write">
		INSERT INTO BOARD (
			NO
		    ,WRITER_NO
		    ,BOARD_CNO
		    ,TITLE
		    ,CONTENT
		    ,BOARD_STATUS_NO
		    )
		VALUES (
		    SEQ_BOARD_NO.NEXTVAL
		    ,#{writerNo}
		    ,#{boardCno}
		    ,#{title}
		    ,#{content}
		    ,1
		    )
	</insert>
	
	
	<!-- DB에 사진 삽입 -->
	<insert id="insertImgToDb">
		INSERT INTO BOARD_IMG (
		    NO
		    ,BOARD_NO
		    ,NAME
		    )
		VALUES (
		    SEQ_BOARD_IMG_NO.NEXTVAL
		    ,SEQ_BOARD_NO.CURRVAL
		    ,#{name}
		)
	</insert>
	
	<!-- 글 수정 -->
	<update id="edit">
		UPDATE BOARD
			SET
			    TITLE = #{title}
			    ,CONTENT = #{content}
			    ,MODIFY_DATE = SYSDATE
			WHERE NO = #{no} 
			AND WRITER_NO = #{writerNo} 
			AND BOARD_STATUS_NO != 5
	</update>
	
	<!-- 글 삭제 -->
	<delete id="delete">
		UPDATE BOARD 
			SET BOARD_STATUS_NO = 5
		WHERE NO = #{no} 
		AND BOARD_STATUS_NO != 5
	</delete>
	
	
</mapper>