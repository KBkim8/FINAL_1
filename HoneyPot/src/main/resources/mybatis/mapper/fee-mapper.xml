<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="fee">
	
	<select id="selectMemberFeeList" resultType="com.hp.app.fee.vo.MemberFeeVo">
		SELECT 
			MFC.NAME AS CATEGORY_NAME
			,MF.PRICE AS PRICE
			,TO_CHAR(MF.PAYMENT_DATE, 'YYYY-MM-DD') AS PAYMENT_DATE
		FROM MEMBER_FEE MF
		JOIN MEMBER_FEE_CATEGORY MFC
			ON MF.FEE_CNO = MFC.NO
		WHERE MF.MEMBER_NO = #{no}
		<if test="searchValue != null and searchValue != ''">
			AND TO_CHAR(MF.PAYMENT_DATE, 'YYYY-MM') LIKE '%${searchValue}%'
		</if>
		<if test="searchValue == null or searchValue == ''">
			AND TO_CHAR(MF.PAYMENT_DATE, 'YYYY-MM') LIKE '%2023-07%'
		</if>
	</select>
	
	<select id="memberTotalPrice" resultType="int">
		SELECT 
			SUM(MF.PRICE) AS TOTAL_PRICE
		FROM MEMBER_FEE MF
		JOIN MEMBER_FEE_CATEGORY MFC
			ON MF.FEE_CNO = MFC.NO
		WHERE MF.MEMBER_NO = #{no}
		<if test="searchValue != null and searchValue != ''">
			AND TO_CHAR(MF.PAYMENT_DATE, 'YYYY-MM') LIKE '%${searchValue}%'
		</if>
		<if test="searchValue == null or searchValue == ''">
			AND TO_CHAR(MF.PAYMENT_DATE, 'YYYY-MM') LIKE '%2023-07%'
		</if>
	</select>
	
	<!-- 회원별 현재 달 관리비 금액 -->
	<select id="currentFee" resultType="int">
		SELECT 
			SUM(MF.PRICE)
		FROM MEMBER_FEE MF
			JOIN MEMBER_FEE_CATEGORY MFC
			ON (MF.FEE_CNO= MFC.NO)
		WHERE MF.MEMBER_NO = #{no}
		AND TO_CHAR(MF.PAYMENT_DATE, 'YYYY-MM') = #{currentMonth}
	</select>
	
	<!-- 회원별 전월 관리비 금액 -->
	<select id="prevFee"  resultType="int">
		SELECT 
			SUM(MF.PRICE)
		FROM MEMBER_FEE MF
			JOIN MEMBER_FEE_CATEGORY MFC
			ON (MF.FEE_CNO= MFC.NO)
		WHERE MF.MEMBER_NO = #{no}
		AND TO_CHAR(MF.PAYMENT_DATE, 'YYYY-MM') = #{previousMonth}
	</select>
	
	<!-- 회원별 현재 달 관리비 금액 -->
	<select id="yearAgoFee" resultType="int">
		SELECT 
			SUM(MF.PRICE)
		FROM MEMBER_FEE MF
			JOIN MEMBER_FEE_CATEGORY MFC
			ON (MF.FEE_CNO= MFC.NO)
		WHERE MF.MEMBER_NO = #{no}
		AND TO_CHAR(MF.PAYMENT_DATE, 'YYYY-MM') = #{oneYearAgo}
	</select>
	
	<!-- 회원 카테고리별 올 해 금액 조회 -->
	<select id="categoryLineChart" resultType="com.hp.app.fee.vo.MemberFeeVo">
		SELECT 
			SUM(MF.PRICE) AS TOTAL_PRICE
			,TO_CHAR(MF.PAYMENT_DATE, 'YYYY-MM') AS PAYMENT_DATE
		FROM MEMBER_FEE MF
			JOIN MEMBER_FEE_CATEGORY MFC
			ON(MF.FEE_CNO = MFC.NO)
		WHERE MFC.NAME = #{categoryName}
		AND TO_CHAR(MF.PAYMENT_DATE, 'YYYY') = #{currentYear}
		GROUP BY TO_CHAR(MF.PAYMENT_DATE, 'YYYY-MM')
	</select>
	
	<!-- 회원 관리비 납부 카테고리 조회(당월) -->
	<select id="thisMonth" resultType="com.hp.app.fee.vo.MemberFeeVo">
		SELECT
		MF.MEMBER_NO AS MEMBER_NO 
        ,MF.PRICE
        ,MFC.NAME AS CATEGORY_NAME
        ,MF.CONTENT
        ,TO_CHAR(MF.PAYMENT_DATE, 'YYYY-MM') AS PAYMENT_DATE
        ,M.NAME AS MEMBER_NAME
        ,M.DONG_NUM AS DONG
        ,M.HO_NUM AS HO
    FROM MEMBER_FEE MF
        JOIN MEMBER_FEE_CATEGORY MFC
        ON (MF.FEE_CNO= MFC.NO)
        JOIN MEMBER M 
        ON (MF.MEMBER_NO = M.NO)
    WHERE MF.MEMBER_NO = #{no}
    AND TO_CHAR(MF.PAYMENT_DATE, 'YYYY-MM') = #{currentMonth}
	</select>
	
	<!-- 회원 관리비 납부 카테고리 조회(전월) -->
	<select id="adminFeeCnt" resultType="int">
		SELECT 
			COUNT(AF.NO)
		FROM ADMIN_FEE AF
			JOIN ADMIN_FEE_CATEGORY AFC
			ON (AF.FEE_CNO = AFC.NO)
		<where>
        <if test="searchType != null and searchType != '' and searchValue != null and searchValue != ''">
            <choose>
                <when test="searchType == 'content'">
                   AND AF.CONTENT LIKE '%${searchValue}%'
                </when>
                <when test="searchType == 'paymentDate'">
                   AND TO_CHAR(AF.PAYMENT_DATE, 'YYYY-MM') LIKE '%${searchValue}%'
                </when>
            </choose>
        </if>
    </where>
	</select>
	
	<!-- 회원 관리비 납부 완료 시 여부 변경 -->
	<update id="changePayYN">
		UPDATE MEMBER_FEE
		SET STATUS = 'Y'
		WHERE MEMBER_NO = #{memberNo}
		AND STATUS = 'N'
	</update>
	
	<select id="adminFeeList" resultType="com.hp.app.fee.vo.AdminFeeVo">
		SELECT 
		    AF.NO AS NO
            ,AF.PRICE AS PRICE
		    ,AF.CONTENT AS CONTENT
		    ,TO_CHAR(AF.PAYMENT_DATE, 'YYYY-MM-DD') AS PAYMENT_DATE
            ,AFC.NAME AS CATEGORY_NAME
            ,AF.FEE_CNO AS FEE_CNO
		FROM ADMIN_FEE AF
		JOIN ADMIN_FEE_CATEGORY AFC 
		ON AF.FEE_CNO = AFC.NO
		<where>
        <if test="searchType != null and searchType != '' and searchValue != null and searchValue != ''">
            <choose>
                <when test="searchType == 'content'">
                   AND AF.CONTENT LIKE '%${searchValue}%'
                </when>
                <when test="searchType == 'paymentDate'">
                   AND TO_CHAR(AF.PAYMENT_DATE, 'YYYY-MM') LIKE '%${searchValue}%'
                </when>
            </choose>
        </if>
    </where>
		ORDER BY AF.PAYMENT_DATE DESC
	</select>
	
	<!-- 관리자 관리비 추가 -->
	<insert id="addFee">
		INSERT INTO ADMIN_FEE
		(
		    NO
		    ,ADMIN_NO
		    ,FEE_CNO
		    ,CONTENT
		    ,PRICE
		    ,PAYMENT_DATE
		)
		VALUES 
		(
		    SEQ_ADMIN_FEE_NO.NEXTVAL
		    ,#{adminNo}
		    ,#{feeCno}
		    ,#{content}
		    ,#{price}
		    ,#{paymentDate}
		)
	</insert>
	<!-- 관리자 관리비 삭제 -->
	<delete id="delete">
		DELETE ADMIN_FEE
		WHERE NO = #{no}
	</delete>
	
	<!-- 관리자 관리비 수정 -->
	<update id="AdminEdit">
		UPDATE ADMIN_FEE SET 
			FEE_CNO = #{feeCno},
			CONTENT = #{content},
			PRICE = #{price},
			PAYMENT_DATE = #{paymentDate}
		WHERE NO= #{no}
	</update>
	
	<!-- 관리자 총괄 월 별 조회 -->
	<select id="AdminFeeList" resultType="com.hp.app.fee.vo.AdminFeeVo">
		SELECT 
		ADMIN_FEE.NO
		,ADMIN_FEE.CONTENT
		,ADMIN_FEE.PRICE
		,ADMIN_FEE.PAYMENT_DATE
		,ADMIN_FEE_CATEGORY.NAME AS CATEGORY_NAME
		FROM ADMIN_FEE
		JOIN ADMIN_FEE_CATEGORY
		ON ADMIN_FEE.FEE_CNO = ADMIN_FEE_CATEGORY.NO
		WHERE TO_CHAR(PAYMENT_DATE, 'YYYY-MM') = #{paymentDate}
		ORDER BY PAYMENT_DATE DESC
	</select>
	
	<select id="getCategoryNo" resultType="String">
		SELECT *
		FROM 
			(SELECT 
			MFC.NO
			FROM MEMBER_FEE_CATEGORY MFC
			JOIN MEMBER_FEE MF
			ON MF.FEE_CNO = MFC.NO
			WHERE MFC.NAME = #{categoryName})
        WHERE ROWNUM = 1
	</select>
	
	<select id="getMemberNo" resultType="String">
		SELECT *
		FROM 
			(SELECT 
			M.NO
			FROM MEMBER M
			JOIN MEMBER_FEE MF
			ON MF.MEMBER_NO = M.NO
			WHERE M.DONG_NUM = #{dongNum}
            AND M.HO_NUM = #{hoNum}
            AND M.GRADE = 'Y')
        WHERE ROWNUM = 1
	</select>
	
	<insert id="insertMemberFee">
		INSERT INTO MEMBER_FEE
		(
		    NO
		    ,MEMBER_NO
		    ,FEE_CNO
		    ,PRICE
		)
		VALUES
		(
		    SEQ_MEMBER_FEE_NO.NEXTVAL
		    ,#{memberNo}
		    ,#{feeCno}
		    ,#{price}
		)
	</insert>
	

</mapper>