<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd">
	

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<context:component-scan
		base-package="com.hp.app" />

	<!-- @Transactional 어노테이션 활성화 -->
	<tx:annotation-driven />

	<!-- 파일 업로드 -->
	<beans:bean
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
		id="multipartResolver">
		<beans:property name="defaultEncoding" value="UTF-8" />
		<beans:property name="maxUploadSize" value="10000000" />
		<beans:property name="maxUploadSizePerFile"
			value="5000000" />
	</beans:bean>

	<!-- 인터셉터 mapping <interceptors> <interceptor> <mapping path="/**"/> 제외할 
		url <exclude-mapping path=""/> <beans:bean class="com.hp.app.interceptor.HpInterceptor"></beans:bean> 
		</interceptor> </interceptors> -->


	<!-- 이메일 -->
	<beans:bean id="mailSender"
		class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<beans:property name="host" value="smtp.gmail.com" />
		<beans:property name="port" value="587" />
		<beans:property name="username" value="j10345678@gmail.com" />
		<beans:property name="password" value="ygucyddaxrkeywem" />
		<beans:property name="defaultEncoding" value="utf-8" />
		<beans:property name="javaMailProperties">
			<beans:props>
				<beans:prop key="mail.transport.protocol">smtp</beans:prop>
				<beans:prop key="mail.smtp.auth">true</beans:prop>
				<!-- gmail의 경우 보안문제 업데이트로 인해 SSLSocketFactory를 추가해야 smtp 사용 가능. -->
				<beans:prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</beans:prop>
				<beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
				<beans:prop key="mail.debug">true</beans:prop>
				<beans:prop key="mail.smtp.ssl.trust">smtp.gmail.com</beans:prop>
				<beans:prop key="mail.smtp.ssl.protocols">TLSv1.2</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>

	<!-- 암호화 -->
	<beans:bean
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
	</beans:bean>

	<!-- 웹소켓 bean 등록 -->
	<beans:bean id="ChatHandler"
		class="com.hp.app.chat.socket.server.ChatSocketServer"></beans:bean>

	<!-- 웹소켓 핸들러 맵핑 -->
	<!-- 웹소켓 만들 때 경로를 path 에 넣어주기 -->
	<websocket:handlers>
		<websocket:mapping handler="ChatHandler"
			path="/chat" />
		<websocket:handshake-interceptors>
			<beans:bean
				class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"></beans:bean>
		</websocket:handshake-interceptors>
	</websocket:handlers>
	
	<!-- 알람 웹소켓 bean 등록 -->
	<beans:bean id="DeliveryHandler"
		class="com.hp.app.delivery.socket.DeliverySocket"></beans:bean>

	<!-- 알람 웹소켓 핸들러 맵핑 -->
	<!-- 알람 웹소켓 만들 때 경로를 path 에 넣어주기 -->
	<websocket:handlers>
		<websocket:mapping handler="DeliveryHandler"
			path="/delivery" />
		<websocket:handshake-interceptors>
			<beans:bean
				class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"></beans:bean>
		</websocket:handshake-interceptors>
	</websocket:handlers>
	
	<!-- 스케쥴러 파일이 존재하는 패키지 -->
	<context:component-scan base-package="com.hp.app.scheduler"/>
	<!-- 크론탭 설정에 -->
	<task:scheduler id="jobScheduler" pool-size="10"/>
	<task:annotation-driven scheduler="jobScheduler"/>

</beans:beans>